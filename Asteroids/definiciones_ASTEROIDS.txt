
Tipos y records

FPS: uint #Frames per second

Window:
	Width: uint
	Height: uint
	
Position:
	X
	Y

Velocity:
	VX:
	VY:

Spin:
	| Clockwise
	| Counterclockwise
	
Size:
	Small
	Medium
	Large

Asteroid:
	Size: Size
	Velocity: Velocity
	Position: Position
	
Ship:
	Position: Position
	Orientation: uint
	Velocity: Velocity
	
Bullet:
	Position: Position
	Velocity: Velocity
	
Frame:
	Ship: ship
	Asteroids: List<Asteroid>
	Bullets: List<Bullet>
	Score: int
	Window: Window

Acceleration:
   | Accelerate
   | Decelerate
   | Zero

Actions:
	Accelerate: Acceleration
	Rotate: Spin
	Fire: Bool

Definir mapa de puntajes {'Small': ...; 'Medium': ...; 'Large': ...}
----------------------------------------------------------------------------------------
	
0 - Inicializar datos

	Funciones

Función updateFrame: Input: Frame; accion| Output: Frame
	1 - Chequear colisiones:
		a - Un asteroide chocó la nave? True -> raise Game Over
		b - Una bala chocó un asteroide? 
			b1 - Función que divide un asteroide grande en 2 medianos, uno mediano en dos pequeños o elimina uno pequeño
				-> Actualizar lista de asteroides, actualizar lista de balas
			b2 - Actualizar puntaje 
			b2 - quedan asteroides? Falso -> raise Nivel finalizado
	
	2 - Actualizacion de nave
		a - Actualizar posición nave : Ship -> Ship | Actualiza Ship.Position
		b - Girar nave : action, ship -> ship | Actualiza Ship.Orientation
		c - Acelerar/desacelerar nave : action, ship -> ship | Actualiza Ship.Velocity

	
	3 - Disparar: accion, ship(para saber orientación y posicoin), List<bullets> -> List<bullets>
	
	4 - Actualizar posicion balas: List<bullet> -> List<bullets>
	5 - Actualizar posicion asteroides: List<asteroids> -> List<asteroids>
	-Cuando un objeto atraviesa los bordes de la ventana aparece por otro extremo.
	
	


	
	